<chapter xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xml:id="chap-post-build-hook"
      version="5.0"
      >

<title>Using the <xref linkend="conf-post-build-hook" /></title>
<subtitle>Uploading to an S3-compatible binary cache after each build</subtitle>


<section>
  <title>Implementation Caveats</title>
  <para>Here we set up a post-build hook to upload to a binary cache.
  This is a simple and working example, but it is not suitable for all
  use cases.</para>

  <para>The post build hook program runs after each executed build,
  and blocks the build loop. If the hook program fails, the build loop
  is canceled.</para>

  <para>Concretely, using this example implementation in scenarios
  where the internet is slow or unreliable will make Nix slow or
  unusable.</para>

  <para>More advanced implementations might pass the store paths a
  user-supplied daemon or queue for processing the store paths outside
  of the hot path of the build.</para>
</section>

<section>
  <title>Prerequisites</title>

  <para>
    This tutorial assumes you have configured an S3-compatible binary cache
    according to the instructions at
    <xref linkend="ssec-s3-substituter-authenticated-writes" />, and
    the <literal>root</literal> user's default AWS profile can upload
    to the bucket.
  </para>
</section>

<section>
  <title>Set up a Signing Key</title>
  <screen>
# nix-store --generate-binary-cache-key example-nix-cache /etc/nix/key.secret /etc/nix/key.public
# cat /etc/nix/key.public
example-nix-cache:1/cKDz3QCCOmwcztD2eV6Coggp6rqc9DGjWv7C0G+rM=
</screen>

<para>and add the public key and your cache URL to your nix.conf's
<xref linkend="conf-trusted-public-keys" /> and
<xref linkend="conf-substituters" /> like:</para>

<programlisting>
substituters = https://cache.nixos.org/ s3://example-nix-cache
trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= example-nix-cache:1/cKDz3QCCOmwcztD2eV6Coggp6rqc9DGjWv7C0G+rM=
</programlisting>

<para>and restart your Nix daemon.</para>
</section>

<section>
  <title>Implementing the build hook</title>
  <para>Write the following script to
  <filename>/etc/nix/upload-to-cache.sh</filename> and make sure it is
  executable by the <literal>root</literal> user.
  </para>

  <programlisting>
#!/bin/sh

set -eu

ALL_OUT_PATHS=$(echo $OUT_PATHS | tr ':' ' ')

echo "Signing paths" $ALL_OUT_PATHS
nix sign-paths --key-file /etc/nix/key.secret $ALL_OUT_PATHS
echo "Uploading paths" $ALL_OUT_PATHS
exec nix copy --to 's3://example-nix-cache' $ALL_OUT_PATHS
</programlisting>

  <para>The hook ignores all the informational arguments, skipping to
  the output path arguments, and passes the output path arguments to
  <command>nix copy</command>.</para>
</section>

<section>
  <title>Updating Nix Configuration</title>

  <para>Edit <filename>/etc/nix/nix.conf</filename> to use this hook,
  by adding the following configuration snippet at the end:</para>

  <programlisting>
post-build-hook = /etc/nix/upload-to-cache.sh
</programlisting>

  <para>Then, restart the <command>nix-daemon</command>.</para>
</section>

<section>
  <title>Testing</title>

  <para>Build any derivation, for example:</para>

  <screen>
$ nix-build -E '(import &lt;nixpkgs&gt; {}).writeText "example" (builtins.toString builtins.currentTime)'
these derivations will be built:
  /nix/store/i1q1386s557i50p3k991cqlqvkb9bybg-example.drv
building '/nix/store/i1q1386s557i50p3k991cqlqvkb9bybg-example.drv'...
/nix/store/m8bmqwrch6l3h8s0k3d673xpmipcdpsa-example
</screen>

  <para>Then delete the path from the store, and try substituting it from the binary cache:</para>
  <screen>
$ rm ./result
$ nix-store --delete /nix/store/m8bmqwrch6l3h8s0k3d673xpmipcdpsa-example
</screen>

<para>Now, copy the path back from the cache:</para>
<screen>
$ nix store --realize /nix/store/m8bmqwrch6l3h8s0k3d673xpmipcdpsa-example
copying path '/nix/store/m8bmqwrch6l3h8s0k3d673xpmipcdpsa-example from 's3://example-nix-cache'...
warning: you did not specify '--add-root'; the result might be removed by the garbage collector
/nix/store/m8bmqwrch6l3h8s0k3d673xpmipcdpsa-example
</screen>

<para>Looking in the Nix daemon's log, we can see the upload command's output:</para>
<screen>
Jul 11 18:58:38 Petunia nix-daemon[17117]: Signing paths /nix/store/m8bmqwrch6l3h8s0k3d673xpmipcdpsa-example
Jul 11 18:58:38 Petunia nix-daemon[17117]: Uploading paths /nix/store/m8bmqwrch6l3h8s0k3d673xpmipcdpsa-example
</screen>
</section>
</chapter>
